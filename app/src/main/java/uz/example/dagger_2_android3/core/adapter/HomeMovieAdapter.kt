package uz.example.dagger_2_android3.core.adapterimport android.view.LayoutInflaterimport android.view.ViewGroupimport androidx.recyclerview.widget.RecyclerViewimport coil.loadimport uz.example.dagger_2_android3.core.model.popular.MovieItemimport uz.example.dagger_2_android3.core.utils.Constantsimport uz.example.dagger_2_android3.databinding.HomeMovieItemBindingimport java.text.SimpleDateFormatimport java.util.*import kotlin.collections.ArrayListclass HomeMovieAdapter : RecyclerView.Adapter<HomeMovieAdapter.ViewHolder>() {    var onMovieItemClick :((MovieItem)->Unit)? =null    var data :List<MovieItem> = ArrayList()        set(value) {            field = value            notifyDataSetChanged()        }    class ViewHolder(val binding: HomeMovieItemBinding) : RecyclerView.ViewHolder(binding.root) {        fun setData(movieItem: MovieItem) {            binding.moviePoster.load(Constants.IMAGE_BASE_URL + movieItem.posterPath)            binding.movieTitle.text = movieItem.title            val parsedDate: Date? = SimpleDateFormat("yyyy-MM-dd",Locale.getDefault()).parse(movieItem.releaseDate)            val formattedDate=SimpleDateFormat("MMM dd, yyyy",Locale.getDefault()).format(parsedDate)            binding.movieDesc.text = formattedDate        }    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {        return ViewHolder(HomeMovieItemBinding.inflate(LayoutInflater.from(parent.context),parent,false))    }    override fun onBindViewHolder(holder: ViewHolder, position: Int) {        holder.setData(data[position])        holder.itemView.setOnClickListener {            onMovieItemClick?.invoke(data[position])        }    }    override fun getItemCount(): Int {        return if (data.size > 10) {            10        } else {            data.size        }    }}