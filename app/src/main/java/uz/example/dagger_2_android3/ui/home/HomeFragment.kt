package uz.example.dagger_2_android3.ui.homeimport android.view.Viewimport android.widget.Toastimport androidx.core.content.ContextCompatimport androidx.fragment.app.viewModelsimport androidx.navigation.fragment.findNavControllerimport androidx.recyclerview.widget.LinearLayoutManagerimport uz.example.dagger_2_android3.Rimport uz.example.dagger_2_android3.core.adapter.HomeAdapterimport uz.example.dagger_2_android3.core.adapter.helper.HorizontalDecorationimport uz.example.dagger_2_android3.core.base.BaseFragmentimport uz.example.dagger_2_android3.core.model.HomeGroupItemimport uz.example.dagger_2_android3.core.utils.HomeItemTypeimport uz.example.dagger_2_android3.core.utils.ViewModelProviderFactoryimport uz.example.dagger_2_android3.databinding.FragmentHomeBindingimport javax.inject.Injectclass HomeFragment : BaseFragment() {    @Inject    lateinit var viewModelProvider: ViewModelProviderFactory    private val viewModel: HomeVM by viewModels { viewModelProvider }    private val adapter = HomeAdapter()    private val binding by lazy {        FragmentHomeBinding.inflate(layoutInflater)    }    override fun onViewCreated() {        binding.homeList.adapter = adapter        binding.homeList.layoutManager = LinearLayoutManager(requireContext())        viewModel.errorLiveData.observe(viewLifecycleOwner) {            Toast.makeText(requireContext(), "${it}", Toast.LENGTH_SHORT).show()        }        viewModel.popularLiveData.observe(viewLifecycleOwner) {            adapter.setData(HomeGroupItem("Popular", data = it, type = HomeItemType.POPULAR))        }        viewModel.upComingLiveData.observe(viewLifecycleOwner) {            adapter.setData(HomeGroupItem("UpComing", data = it, type = HomeItemType.UPCOMING))        }//        viewModel.loadPopular()//        viewModel.loadUpcoming()        adapter.onAllItemClick={            val action = HomeFragmentDirections.actionHomeFragmentToAllMoviesFragment()            findNavController().navigate(action)        }        adapter.onMovieItemClick={        }    }    override fun createView(): View {        return binding.root    }}