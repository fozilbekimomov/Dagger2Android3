package uz.example.dagger_2_android3.ui.homeimport com.beepul.lite.chat.utils.SingleLiveEventimport uz.example.dagger_2_android3.core.base.BaseViewModelimport uz.example.dagger_2_android3.core.model.popular.MovieItemimport uz.example.dagger_2_android3.core.repo.MainRepoimport uz.example.dagger_2_android3.core.utils.ResultWrapperimport javax.inject.Injectclass HomeVM @Inject constructor(var mainRepo: MainRepo) : BaseViewModel() {    val popularLiveData = SingleLiveEvent<List<MovieItem>>()    private var popularPage = 1    init {        loadPopular()        loadUpcoming()    }    fun loadPopular() {        launch {            when (val response = mainRepo.loadPopular(1)) {                is ResultWrapper.Success -> {                    response.response?.let {                        popularLiveData.postValue(response.response.results)                        popularPage = it.page                    }                }                is ResultWrapper.ErrorResponse -> {                    errorLiveData.postValue(response.error.toString())                }                is ResultWrapper.NetworkError -> {                    errorLiveData.postValue("Internet ishlamadi")                }            }        }    }    val upComingLiveData = SingleLiveEvent<List<MovieItem>>()    private var upComingPage = 1    fun loadUpcoming() {        launch {            when (val response = mainRepo.loadUpComing(1)) {                is ResultWrapper.Success -> {                    response.response?.let {                        upComingLiveData.postValue(response.response.results)                        upComingPage = it.page                    }                }                is ResultWrapper.ErrorResponse -> {                    errorLiveData.postValue(response.error.toString())                }                is ResultWrapper.NetworkError -> {                    errorLiveData.postValue("Internet ishlamadi")                }            }        }    }}